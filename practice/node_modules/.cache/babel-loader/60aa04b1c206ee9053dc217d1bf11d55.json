{"ast":null,"code":"import { combineReducers } from 'redux';\n\nconst songReducer = () => {\n  return [{\n    title: 'Abu',\n    duration: '1:02:04'\n  }, {\n    title: 'Bbu',\n    duration: '2:02:04'\n  }, {\n    title: 'Cbu',\n    duration: '3:02:04'\n  }, {\n    title: 'Dbu',\n    duration: '4:02:04'\n  }, {\n    title: 'Ebu',\n    duration: '5:02:04'\n  }, {\n    title: 'Gbu',\n    duration: '6:02:04'\n  }];\n};\n\nconst selectedSongReducer = (selectedSong = null, action) => {\n  if (action.type == 'SONG_SELECTED') {\n    return action.payload;\n  }\n\n  return selectedSong;\n};\n\nexport default combineReducers({\n  songs: songReducer,\n  selectedSong: selectedSongReducer\n});","map":{"version":3,"sources":["/Users/mahbubcseju/Desktop/projects/reactjs/practice/src/reducers/index.js"],"names":["combineReducers","songReducer","title","duration","selectedSongReducer","selectedSong","action","type","payload","songs"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;;AAGA,MAAMC,WAAW,GAAG,MAAM;AACtB,SAAO,CACH;AAAEC,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GADG,EAEH;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAFG,EAGH;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAHG,EAIH;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAJG,EAKH;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GALG,EAMH;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GANG,CAAP;AAQH,CATD;;AAWA,MAAMC,mBAAmB,GAAG,CAACC,YAAY,GAAG,IAAhB,EAAsBC,MAAtB,KAAiC;AACzD,MAAIA,MAAM,CAACC,IAAP,IAAe,eAAnB,EAAmC;AAC/B,WAAOD,MAAM,CAACE,OAAd;AACH;;AACD,SAAOH,YAAP;AACH,CALD;;AAOA,eAAeL,eAAe,CAAC;AAC3BS,EAAAA,KAAK,EAAER,WADoB;AAE3BI,EAAAA,YAAY,EAAED;AAFa,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\n\n\nconst songReducer = () => {\n    return [\n        { title: 'Abu', duration: '1:02:04' },\n        { title: 'Bbu', duration: '2:02:04' },\n        { title: 'Cbu', duration: '3:02:04' },\n        { title: 'Dbu', duration: '4:02:04' },\n        { title: 'Ebu', duration: '5:02:04' },\n        { title: 'Gbu', duration: '6:02:04' }\n    ]\n};\n\nconst selectedSongReducer = (selectedSong = null, action) => {\n    if (action.type == 'SONG_SELECTED'){\n        return action.payload;\n    }\n    return selectedSong;\n};\n\nexport default combineReducers({\n    songs: songReducer,\n    selectedSong: selectedSongReducer\n});"]},"metadata":{},"sourceType":"module"}